rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin;
service firebase.storage {
  	match /b/{bucket}/o {
    
    // 1) Articles folder: public read, admin‐only writes
    match /articles/{allPaths=**} {
      // Anyone can download/view
      allow read: if true;
      // Only admins may upload/update/delete
      allow write: if request.auth != null
        && request.auth.token.admin == true;
    }

    // 2) Forum folder: public read, authenticated writes
    match /forum/{allPaths=**} {
      // Anyone (even unauthenticated) can read forum assets
      allow read: if true;
      // Only signed-in users can upload/update/delete
      allow write: if request.auth != null;
    }

    // 3) Items folder: authenticated reads, no client writes
    match /items/{allPaths=**} {
      // Only logged-in users may download
      allow read: if request.auth != null;
      // No client-side uploads/edits
      allow write: if false;
    }

    // 4) Shared folder: public read, no client writes
    match /shared/{allPaths=**} {
      // Anyone can read shared assets
      allow read: if true;
      // No uploads/edits by clients
      allow write: if false;
    }

 		// ─────────────────────────────────────────────────
    // Profiles folder
    // public read, but only the folder‐owner may write
    match /profiles/{userId}/{allPaths=**} {
      // Anyone can download/view profile assets
      allow read: if true;
      // Only the authenticated user whose UID matches the folder name
      allow write: if request.auth != null
        && request.auth.uid == userId;
    }

    // 5) Everything else is denied
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
